#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @File  : cp3_4_2.py
# @Author: WRH
# @Date  : 2021/2/7
# @Edition:Python3.8.6

# for语句和range()内置函数

# for语句可以用于遍历可迭代对象中的所有元素，遍历结束后可执行else语句，没有就直接输出结果。
'''
for循环结构书写格式

for 循环变量 in 对象:
    语句块A
else:  # 可选
    语句块B
'''

word = 'Hello'  # 在此代码中，Hello不是一个单词，而是一串字符串，其头部是H，尾部是o，H、e、l、l、o分别为其第0,1,2,3,4个元素。
for i in word:  # i为自己及设定的变量，此语句将对word变量中的每一个元素进行迭代
    print(i, end=' ')  # 由于是迭代，所以在内存中一共输出了五次，每次都以空格将进行结尾。
                       # 如果没有end=' '，每次print语句都会自动换行，而有了这个语句，数据就不会自动换行

# 统计字符串'山羊上山山碰山羊角'中出现山的次数
word = '山羊上山山碰山羊角'
sum = 0  # 出现山字次数初始值为0
for i in word:
    if i == '山':
        sum += 1  # 相当于sum = sum+1
print(sum)

# rang()函数
'''
range()用于生成整数序列，通常的写法是：range(start, end, step)。
其中，start决定序列的起始值（起始值可以省略，省略时该值为0）、
end代表序列的终值（半开区间，不包括end的值），
step代表序列的步长（可以省略，默认值是1），即间隔多少次取一次值，
step为负数时，第一个索引必须比第二个索引大，否则无法取值。
python2中range()和python3中range()的区别：
# python 2
print(range(0,10)) # 结果：[0,1,2,3,4,5,6,7,8,9]
# python 3中需要添加转化函数
print(range(0,10)) # 结果:range(0,10)
print(list(range(0,10))) # 列表结果：[0,1,2,3,4,5,6,7,8,9]
print(tuple(range(0,10))) # 元组结果：(1, 2, 3, 4, 5, 6, 7, 8, 9)
'''

for i in range(4, 10, 2):  # rang()函数生成从4到10（半开区间不包含10 ）的数列，每间隔两次取一次值。
    print(i, end=" ")    # 程序运行结果为“4 6 8”，因为是半开区间，所以不包括数字10。

for i in range(10, 4, -2):  # 步长为负数时，第一个索引必须比第二个索引大，否则无法取值
    print(i, end=' ')  # 程序运行结果为“10 8 6 ”，因为是半开区间，所以不包括数字4。

for i in range(5):  # 省略初始值默认为0，省略步长，默认为1，此语句相当于for i in range(0, 5, 1):
    print(i, end=' ')  # 程序运行结果为“0 1 2 3 4 ”，因为是半开区间，所以不包括数字5。

# 例3-11
# 编写程序，使用for语句计算1～10000的自然数之和。
total = 0  # 设置所求自然数之和的初始值为0
for i in range(1, 10001, 1):  # 生成1~10000的自然数并进行遍历
    total = total+i  # 将生成的1~10000的自然数进行相加
print("1~10000的总和为：", total)

# 例3-12
'''编写程序，解决以下问题。
4个人中有一人做了好事，已知有三个人说了真话，根据下面对话判断是谁做的好事。
A说：不是我；(不是A)
B说：是C；
C说：是D；
D说：C胡说。(不是D)
'''
for i in ['A', 'B', 'C', 'D']:  # 做好事的人假设为i，在ABCD四个人中，依次进行遍历
    if (i != 'A') + (i == 'C') + (i == 'D') + (i != 'D') == 3:  # 验证四个人说的话，为真是计数为1，总和为3时即可确定为做好事的人
        print(i, "做了好事！")
'''
布尔值可以进行算术运算，True为1，False为0
比如：
d = False + 1 + True
print(d) # d的值为2
'''
